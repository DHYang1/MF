<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mf.mapper.PalaceMapper" >
  <resultMap id="BaseResultMap" type="mf.pojo.Palace" >
    <result column="palace_id" property="palaceId" jdbcType="BIGINT" />
    <result column="headPath" property="headpath" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="degree" property="degree" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    palace_id, headPath, place, name, status, degree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="mf.pojo.PalaceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from palace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="mf.pojo.PalaceExample" >
    delete from palace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mf.pojo.Palace" >
    insert into palace (palace_id, headPath, place, 
      name, status, degree
      )
    values (#{palaceId,jdbcType=BIGINT}, #{headpath,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{degree,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="mf.pojo.Palace" >
    insert into palace
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="palaceId != null" >
        palace_id,
      </if>
      <if test="headpath != null" >
        headPath,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="degree != null" >
        degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="palaceId != null" >
        #{palaceId,jdbcType=BIGINT},
      </if>
      <if test="headpath != null" >
        #{headpath,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mf.pojo.PalaceExample" resultType="java.lang.Integer" >
    select count(*) from palace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update palace
    <set >
      <if test="record.palaceId != null" >
        palace_id = #{record.palaceId,jdbcType=BIGINT},
      </if>
      <if test="record.headpath != null" >
        headPath = #{record.headpath,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update palace
    set palace_id = #{record.palaceId,jdbcType=BIGINT},
      headPath = #{record.headpath,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      degree = #{record.degree,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <!-- 分页查询殿堂设计师 -->
    <!-- 分页查询语句 -->
     
      <select id="getPalaceByPage" resultMap="BaseResultMap"  resultType="java.lang.Integer">
		   SELECT  <include refid="Base_Column_List" />
		   
		    from palace  limit  #{page},10
		  </select>
  
  
</mapper>